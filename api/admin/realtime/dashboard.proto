syntax = "proto3";

package api.admin.realtime;

import "google/api/annotations.proto";
import "buf/validate/validate.proto";
import "admin/model.proto";
import "enum.proto";
import "global.proto";

option go_package = "github.com/aide-family/moon/api/admin/realtime;realtime";
option java_multiple_files = true;
option java_package = "api.admin.realtime";

// 实时监控之数据大盘
service Dashboard {
	// 创建大盘
	rpc CreateDashboard (CreateDashboardRequest) returns (CreateDashboardReply) {
		option (google.api.http) = {
			post: "/v1/admin/realtime/dashboard/create"
			body: "*"
		};
	}

	// 更新大盘
	rpc UpdateDashboard (UpdateDashboardRequest) returns (UpdateDashboardReply) {
		option (google.api.http) = {
			put: "/v1/admin/realtime/dashboard/update/{id}"
			body: "*"
		};
	}

	// 删除大盘
	rpc DeleteDashboard (DeleteDashboardRequest) returns (DeleteDashboardReply) {
		option (google.api.http) = {
			delete: "/v1/admin/realtime/dashboard/delete/{id}"
		};
	}

	// 获取大盘明细
	rpc GetDashboard (GetDashboardRequest) returns (GetDashboardReply) {
		option (google.api.http) = {
			get: "/v1/admin/realtime/dashboard/get/{id}"
		};
	}

	// 获取大盘列表
	rpc ListDashboard (ListDashboardRequest) returns (ListDashboardReply) {
		option (google.api.http) = {
			post: "/v1/admin/realtime/dashboard/list"
			body: "*"
		};
	}

	// 获取大盘下拉列表
	rpc ListDashboardSelect (ListDashboardRequest) returns (ListDashboardSelectReply) {
		option (google.api.http) = {
			post: "/v1/admin/realtime/dashboard/list/select"
			body: "*"
		};
	}

	// 批量修改仪表板状态
	rpc BatchUpdateDashboardStatus (BatchUpdateDashboardStatusRequest) returns (BatchUpdateDashboardStatusReply) {
		option (google.api.http) = {
			post: "/v1/admin/realtime/dashboard/batch/update/status"
			body: "*"
		};
	}

	// 添加图表
	rpc AddChart (AddChartRequest) returns (AddChartReply) {
		option (google.api.http) = {
			post: "/v1/admin/realtime/dashboard/{dashboardId}/chart/add"
			body: "*"
		};
	}

	// 更新图表
	rpc UpdateChart (UpdateChartRequest) returns (UpdateChartReply) {
		option (google.api.http) = {
			put: "/v1/admin/realtime/dashboard/{dashboardId}/chart/update/{id}"
			body: "*"
		};
	}

	// 删除图表
	rpc DeleteChart (DeleteChartRequest) returns (DeleteChartReply) {
		option (google.api.http) = {
			delete: "/v1/admin/realtime/dashboard/{dashboardId}/chart/delete/{id}"
		};
	}

	// 获取图表明细
	rpc GetChart (GetChartRequest) returns (GetChartReply) {
		option (google.api.http) = {
			get: "/v1/admin/realtime/dashboard/{dashboardId}/chart/get/{id}"
		};
	}

	// 获取图表列表
	rpc ListChart (ListChartRequest) returns (ListChartReply) {
		option (google.api.http) = {
			post: "/v1/admin/realtime/dashboard/{dashboardId}/chart/list"
			body: "*"
		};
	}

	// 批量修改图表状态
	rpc BatchUpdateChartStatus (BatchUpdateChartStatusRequest) returns (BatchUpdateChartStatusReply) {
		option (google.api.http) = {
			put: "/v1/admin/realtime/dashboard/{dashboardId}/chart/batch/update/status"
			body: "*"
		};
	}

	// 批量更新图表排序
	rpc BatchUpdateChartSort (BatchUpdateChartSortRequest) returns (BatchUpdateChartSortReply) {
		option (google.api.http) = {
			put: "/v1/admin/realtime/dashboard/{dashboardId}/chart/batch/update/sort"
			body: "*"
		};
	}

	// 获取个人仪表板列表
	rpc ListSelfDashboard (ListSelfDashboardRequest) returns (ListSelfDashboardReply) {
		option (google.api.http) = {
			get: "/v1/admin/realtime/self/dashboard/list"
		};
	}

	// 更新个人仪表板
	rpc UpdateSelfDashboard (UpdateSelfDashboardRequest) returns (UpdateSelfDashboardReply) {
		option (google.api.http) = {
			put: "/v1/admin/realtime/self/dashboard/update"
			body: "*"
		};
	}
}

message CreateDashboardRequest {
	// 仪表板名称
	string title = 1 [(buf.validate.field).cel = {
		message: "仪表标题在1-20个字符",
		expression: 'this.size() >= 1 && this.size() <= 20'
	}];
	// 仪表板说明
	string remark = 2 [(buf.validate.field).cel = {
		message: "仪表说明在200个字符以内",
		expression: 'this.size() <= 200'
	}];
	// 仪表板颜色
	string color = 3;
	// 仪表板状态	
	Status status = 4;
	// 策略组
	repeated uint32 strategyGroups = 5;
}
message CreateDashboardReply {}

message UpdateDashboardRequest {
	// 仪表板ID
	uint32 id = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	CreateDashboardRequest dashboard = 2;
}
message UpdateDashboardReply {}

message DeleteDashboardRequest {
	// 仪表板ID
	uint32 id = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
}
message DeleteDashboardReply {}

message GetDashboardRequest {
	// 仪表板ID
	uint32 id = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 是否获取图表列表
	bool charts = 2;
	// 我的大盘
	bool myDashboard = 3;
}
message GetDashboardReply {
	// 仪表板详情
	DashboardItem detail = 1;
}

message ListDashboardRequest {
	// 仪表板名称
	string keyword = 1 [(buf.validate.field).cel = {
		message: "模糊搜索在20个字符以内",
		expression: 'this.size() <= 20'
	}];
	// 仪表板状态
	Status status = 2;
	// 分页
	PaginationReq pagination = 3 [(buf.validate.field).required = true];
	// 我的大盘
	bool myDashboard = 4;
}
message ListDashboardReply {
	// 仪表板列表
	repeated DashboardItem list = 1;
	// 分页
	PaginationReply pagination = 2;
}

message ListDashboardSelectReply {
	// 仪表板列表
	repeated SelectItem list = 1;
	// 分页
	PaginationReply pagination = 2;
}

message BatchUpdateDashboardStatusRequest {
	// 仪表板ID列表
	repeated uint32 ids = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this.size() > 0'
	}];
	// 仪表板状态
	Status status = 2;
}
message BatchUpdateDashboardStatusReply {}

message AddChartRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 图表标题
	string title = 2 [(buf.validate.field).cel = {
		message: "图表标题在1-20个字符",
		expression: 'this.size() >= 1 && this.size() <= 20'
	}];
	// 图表说明
	string remark = 3 [(buf.validate.field).cel = {
		message: "图表说明在200个字符以内",
		expression: 'this.size() <= 200'
	}];
	// 图表url
	string url = 4 [(buf.validate.field).cel = {
		message: "图表url不能为空",
		expression: 'this.isUri()'
	}];
	// 图表状态
	Status status = 5;
	// 宽度
	string width = 7;
	// 高度
	string height = 8;
}
message AddChartReply {}

message UpdateChartRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 图表ID
	uint32 id = 2 [(buf.validate.field).cel = {
		message: "请选择要操作的图表",
		expression: 'this > 0'
	}];
	AddChartRequest chart = 3;
}
message UpdateChartReply {}

message DeleteChartRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 图表ID
	uint32 id = 2 [(buf.validate.field).cel = {
		message: "请选择要操作的图表",
		expression: 'this > 0'
	}];
}
message DeleteChartReply {}

message GetChartRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 图表ID
	uint32 id = 2 [(buf.validate.field).cel = {
		message: "请选择要操作的图表",
		expression: 'this > 0'
	}];
}
message GetChartReply {
	// 图表详情
	ChartItem detail = 1;
}

message ListChartRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 分页
	PaginationReq pagination = 2;
	// 图表状态
	Status status = 3;
	// 图表标题
	string keyword = 5 [(buf.validate.field).cel = {
		message: "模糊搜索在20个字符以内",
		expression: 'this.size() <= 20'
	}];
}
message ListChartReply {
	// 图表列表
	repeated ChartItem list = 1;
	// 分页
	PaginationReply pagination = 2;
}

message BatchUpdateChartStatusRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 图表ID列表
	repeated uint32 ids = 2 [(buf.validate.field).cel = {
		message: "请选择要操作的图表",
		expression: 'this.size() > 0'
	}];
	// 图表状态
	Status status = 3;
}
message BatchUpdateChartStatusReply {}

message BatchUpdateChartSortRequest {
	// 仪表板ID
	uint32 dashboardId = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this > 0'
	}];
	// 图表ID列表
	repeated uint32 ids = 2 [(buf.validate.field).cel = {
		message: "请选择要操作的图表",
		expression: 'this.size() > 0'
	}];
}
message BatchUpdateChartSortReply {}

message ListSelfDashboardRequest {}
message ListSelfDashboardReply {
	// 仪表板列表
	repeated DashboardItem list = 1;
}

message UpdateSelfDashboardRequest {
	// 仪表板ID列表
	repeated uint32 ids = 1 [(buf.validate.field).cel = {
		message: "请选择要操作的仪表",
		expression: 'this.size() > 0'
	}, (buf.validate.field).cel = {
		message: "仪表板ID列表不能重复",
		expression: 'this.unique()'
	}, (buf.validate.field).cel = {
		message: "最多选择10个仪表板",
		expression: 'this.size() <= 10'
	}];
}
message UpdateSelfDashboardReply {}